// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PathChallangeDal;

namespace PathChallange.Dal.Migrations
{
    [DbContext(typeof(PathChallangeDbContext))]
    [Migration("20220514204405_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PathChallange.Entities.Models.Authority", b =>
                {
                    b.Property<int>("AuthorityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorityID");

                    b.ToTable("Authorities");
                });

            modelBuilder.Entity("PathChallange.Entities.Models.Orders", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PathChallange.Entities.Models.ShippingCompany", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID");

                    b.ToTable("ShippingCompanies");
                });

            modelBuilder.Entity("PathChallange.Entities.Models.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorityID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("AuthorityID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PathChallange.Entities.ProductCategory", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<int?>("ShippingCompanyCompanyID")
                        .HasColumnType("int");

                    b.HasKey("CategoryID");

                    b.HasIndex("ShippingCompanyCompanyID");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("PathChallange.Entities.Products", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeletedConfirmaiton")
                        .HasColumnType("bit");

                    b.Property<string>("ProdcutName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductCategoryCategoryID")
                        .HasColumnType("int");

                    b.Property<int>("ShippingCompanyId")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("ProductCategoryCategoryID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PathChallange.Entities.Models.Users", b =>
                {
                    b.HasOne("PathChallange.Entities.Models.Authority", "Authority")
                        .WithMany("Users")
                        .HasForeignKey("AuthorityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PathChallange.Entities.ProductCategory", b =>
                {
                    b.HasOne("PathChallange.Entities.Models.ShippingCompany", "ShippingCompany")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ShippingCompanyCompanyID");
                });

            modelBuilder.Entity("PathChallange.Entities.Products", b =>
                {
                    b.HasOne("PathChallange.Entities.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryCategoryID");
                });
#pragma warning restore 612, 618
        }
    }
}
